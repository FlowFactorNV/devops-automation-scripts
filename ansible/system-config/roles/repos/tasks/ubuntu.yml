# Ubuntu apt sources setup
- name: Install Ubuntu dependencies
  become: yes
  with_items:
    - python-apt
  ansible.builtin.package:
    name: '{{ item }}'
    state: present

- name: "Upload GPG keys for repositories"
  when: "item['name']|default(item) in repository_list and ubuntu_distribution in repository_list[item['name']|default(item)] and repository_list[item][ubuntu_distribution]['key'] is defined and not ansible_check_mode"
  with_items: "{{ repositories[ubuntu_distribution] | default([]) }}"
  tags:
    - files
    - repos
  ansible.builtin.copy:
    src: "debian/keys/{{ repository_list[item][ubuntu_distribution]['key'] }}"
    dest: "/tmp/{{ repository_list[item][ubuntu_distribution]['key'] }}"
    owner: root
    group: root
    mode: 0644

- name: "Setup GPG keys for repositories"
  when: "item['name']|default(item) in repository_list and ubuntu_distribution in repository_list[item['name']|default(item)] and repository_list[item][ubuntu_distribution]['key'] is defined and not ansible_check_mode"
  with_items: "{{ repositories[ubuntu_distribution] | default([]) }}"
  tags:
    - files
    - repos
  ansible.builtin.apt_key:
    file: "/tmp/{{ repository_list[item][ubuntu_distribution]['key'] }}"

- name: "Clean up GPG keys for repositories"
  when: "item['name']|default(item) in repository_list and ubuntu_distribution in repository_list[item['name']|default(item)] and repository_list[item][ubuntu_distribution]['key'] is defined and not ansible_check_mode"
  with_items: "{{ repositories[ubuntu_distribution] | default([]) }}"
  tags:
    - files
    - repos
  ansible.builtin.file:
    path: "/tmp/{{ repository_list[item][ubuntu_distribution]['key'] }}"
    state: absent

- name: "Setup sources.list.d repositories from deb package"
  when: "item['name']|default(item) in repository_list and ubuntu_distribution in repository_list[item['name']|default(item)] and repository_list[item['name']|default(item)][ubuntu_distribution]['url'].endswith('deb')"
  with_items: "{{ repositories[ubuntu_distribution] | default([]) }}"
  tags:
    - files
    - repos
  ansible.builtin.apt:
    state: present
    deb: "{{ repository_list[item][ubuntu_distribution]['url'] }}"
    dpkg_options: "force-confnew"
    update_cache: no

- name: "Update apt cache"
  tags:
    - repos
  ansible.builtin.apt:
    update_cache: yes
